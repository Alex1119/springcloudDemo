<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.core.mapper.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.core.model.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="depart_code" property="departCode" jdbcType="VARCHAR" />
    <result column="depart_name" property="departName" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="from_type" property="fromType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, open_id, account_id, depart_code, depart_name, mobile, from_type, create_time, 
    register_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.core.model.UserInfo" >
    insert into user_info (id, open_id, account_id, 
      depart_code, depart_name, mobile, 
      from_type, create_time, register_time
      )
    values (#{id,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, 
      #{departCode,jdbcType=VARCHAR}, #{departName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{fromType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{registerTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.core.model.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="departCode != null" >
        depart_code,
      </if>
      <if test="departName != null" >
        depart_name,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="fromType != null" >
        from_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="departCode != null" >
        #{departCode,jdbcType=VARCHAR},
      </if>
      <if test="departName != null" >
        #{departName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="fromType != null" >
        #{fromType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.core.model.UserInfo" >
    update user_info
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="departCode != null" >
        depart_code = #{departCode,jdbcType=VARCHAR},
      </if>
      <if test="departName != null" >
        depart_name = #{departName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="fromType != null" >
        from_type = #{fromType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.core.model.UserInfo" >
    update user_info
    set open_id = #{openId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      depart_code = #{departCode,jdbcType=VARCHAR},
      depart_name = #{departName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      from_type = #{fromType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      register_time = #{registerTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="userList" resultType="com.example.core.model.UserInfo">
    SELECT <include refid="Base_Column_List" />
    FROM user_info
    where open_id = #{arg0} AND depart_code = #{arg1}
  </select>
</mapper>